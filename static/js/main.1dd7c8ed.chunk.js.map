{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","username","email","className","src","alt","CardList","robots","map","user","i","Searchbox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","console","log","fetch","then","response","json","users","this","filterRobot","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAClC,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BL,EAA1B,YAAwCM,IAAI,UACpD,gCACE,6BAAKL,IACL,4BAAIC,IACJ,4BAAIC,WCUGI,EAhBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BACGA,EAAOC,KAAI,SAACC,EAAMC,GAAP,OACV,cAAC,EAAD,CAEEX,GAAIQ,EAAOG,GAAGX,GACdC,KAAMO,EAAOG,GAAGV,KAChBE,MAAOK,EAAOG,GAAGR,MACjBD,SAAUM,EAAOG,GAAGT,UAJfS,SCQAC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKV,UAAU,gBAAf,SACE,uBACEA,UAAU,uCACVW,KAAK,SACLC,YAAY,0BACZC,SAAUH,OCMHI,G,MAdA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGJ,EAAMK,aCsCEC,E,kDA1Cb,aAAe,IAAD,8BACZ,gBAcFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAd1C,EAAKC,MAAQ,CACXvB,OAAQ,GACRK,YAAa,IAEfmB,QAAQC,IAAI,eANA,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKV,SAAS,CAAEpB,OAAQ8B,S,oBAO7C,WACE,MAAgCC,KAAKR,MAA7BvB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YAChBmB,QAAQC,IAAI,UACZ,IAAMO,EAAchC,EAAOiC,QAAO,SAACC,GAAD,OAChCA,EAAMzC,KAAK0C,cAAcC,SAAS/B,EAAY8B,kBAEhD,OAAQnC,EAAOqC,OAGb,sBAAKzC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWU,aAAcyB,KAAKb,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,OAAQgC,MAEpB,wBAAQpC,UAAU,+BAAlB,mCARF,oBAAIA,UAAU,cAAd,4B,GA3BY0C,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.1dd7c8ed.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({ id, name, username, email }) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"robot\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{username}</p>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {robots.map((user, i) => (\r\n        <Card\r\n          key={i}\r\n          id={robots[i].id}\r\n          name={robots[i].name}\r\n          email={robots[i].email}\r\n          username={robots[i].username}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"../containers/App\";\r\n\r\nconst Searchbox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className=\"searchSection\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue br4\"\r\n        type=\"search\"\r\n        placeholder=\"Search Anime Characters\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Searchbox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        border: \"1px solid black\",\r\n        height: \"500px\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport Searchbox from \"../components/Searchbox\";\r\nimport \"./App.css\";\r\nimport Scroll from \"../components/Scroll\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: \"\",\r\n    };\r\n    console.log(\"constructor\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ robots: users }));\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state;\r\n    console.log(\"render\");\r\n    const filterRobot = robots.filter((robot) =>\r\n      robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    );\r\n    return !robots.length ? (\r\n      <h1 className=\"tc f1-l fw1\">Loading...</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">Anime Bots</h1>\r\n        <Searchbox searchChange={this.onSearchChange} />\r\n        <Scroll>\r\n          <CardList robots={filterRobot} />\r\n        </Scroll>\r\n        <footer className=\"pv4 ph3 ph5-m ph6-l mid-gray\">\r\n          &copy; Aman Pardeshi\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./containers/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"tachyons\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}